rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users - users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Chats - users can only access their own chats
    match /chats/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Chat messages subcollection
    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == get(/databases/$(database)/documents/chats/$(chatId)).data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == get(/databases/$(database)/documents/chats/$(chatId)).data.userId;
    }
    
    // UsageLogs - users can only access their own usage logs
    match /usageLogs/{logId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Subscriptions - users can only access their own subscription
    match /subscriptions/{subscriptionId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // FortniteData - users can only access their own Fortnite data
    match /fortniteData/{dataId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Usage tracking - users can only access their own usage
    match /usage/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Epic accounts - users can only access their own
    match /epicAccounts/{docId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Fortnite stats - users can only access their own
    match /fortniteStats/{docId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Conversations - users can only access their own
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Messages - users can only access messages in their conversations
    match /conversations/{conversationId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId;
    }
    
    // Replay uploads - users can only access their own
    match /replayUploads/{uploadId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}